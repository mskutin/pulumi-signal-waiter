name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Verify package-lock.json exists
        run: |
          if [ ! -f package-lock.json ]; then
            echo "❌ package-lock.json not found. Running npm install to generate it."
            npm install
          else
            echo "✅ package-lock.json found"
          fi

      - name: Install dependencies
        run: |
          # Try npm ci first, fallback to npm install if it fails
          npm ci || (echo "npm ci failed, falling back to npm install" && npm install)

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Build project
        run: npm run build

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for high/critical vulnerabilities
        run: |
          # Allow moderate vulnerabilities but fail on high/critical
          npm audit --audit-level=high

  package-validation:
    name: Package Validation
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build package
        run: npm run build

      - name: Pack package
        run: npm pack

      - name: Test package installation
        run: |
          mkdir test-install
          cd test-install
          npm init -y
          npm install ../mskutin-pulumi-signal-waiter-*.tgz
          node -e "const { SignalWaiter } = require('@mskutin/pulumi-signal-waiter'); console.log('✅ Package imports successfully:', typeof SignalWaiter);"

      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: npm-package
          path: "*.tgz"
          retention-days: 7

  examples-validation:
    name: Examples Validation
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build main package
        run: npm run build

      - name: Validate examples TypeScript
        run: npm run examples:build
